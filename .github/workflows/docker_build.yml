name: Docker Build
on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Ballerina release version'
        required: true
        default: '2201.2.1-rc1'


jobs:
  docker-build:
    name: Docker Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '8'

      - name: Set version env variable
        id: set-version
        run: |
          RELEASE_VERSION=${{ github.event.inputs.release_version }}
          VERSION=$(cut -d- -f1 <<< $RELEASE_VERSION)
          CODE_NAME="swan-lake"
          TAGGED_VERSION=$RELEASE_VERSION
          LONG_VERSION=$VERSION-$CODE_NAME

          UPDATE_NUMBER=$(cut -d'.' -f2 <<< $VERSION)
          DISPLAY_VERSION="$VERSION (Swan Lake Update $UPDATE_NUMBER)"

          echo VERSION=$VERSION >> $GITHUB_ENV
          echo LONG_VERSION=$LONG_VERSION >> $GITHUB_ENV
          echo DISPLAY_VERSION=$DISPLAY_VERSION >> $GITHUB_ENV
          echo GIT_TAG=$TAGGED_VERSION >> $GITHUB_ENV
          echo "::set-output name=version::$VERSION"
          echo "::set-output name=taggedVersion::$TAGGED_VERSION"

      - name: Download ballerina zip
        run: |
          baseUrl="https://github.com/ballerina-platform/ballerina-distribution/releases/download/v$GIT_TAG"
          mkdir $VERSION
          cd $VERSION
          wget "$baseUrl/ballerina-$VERSION.zip"
        env:
          GITHUB_TOKEN: ${{ secrets.BALLERINA_BOT_TOKEN }}
          packageUser: ${{ secrets.BALLERINA_BOT_USERNAME }}
          packagePAT: ${{ secrets.BALLERINA_BOT_TOKEN }}
          devCentralToken: ${{ secrets.BALLERINA_DEV_CENTRAL_ACCESS_TOKEN }}

#      - name: Login to DockerHub
#        uses: docker/login-action@v1
#        with:
#          username: ${{ secrets.DOCKER_HUB_USER }}
#          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Process docker
        id: process-docker
        run: |
          git clone --single-branch --branch master https://github.com/ballerina-platform/module-ballerina-docker

          DOCKER_REPO='module-ballerina-docker'
          echo "::set-output name=dockerRepo::$DOCKER_REPO"


      - name: Build and push docker image
        run: |
          echo $'{\n    "experimental": true\n}' | sudo tee /etc/docker/daemon.json
          sudo service docker restart
          docker version
          DOCKER_REPO=${{ steps.process-docker.outputs.dockerRepo }}

          cp $VERSION/ballerina-$VERSION.zip $DOCKER_REPO/base/docker/
          docker build --no-cache=true --squash --build-arg BALLERINA_DIST=ballerina-$VERSION.zip -t ballerina/ballerina:$GIT_TAG  $DOCKER_REPO/base/docker/


#          rm ${dockerRepo}/base/docker/ballerina-$VERSION.zip
#          docker push ballerina/ballerina:$GIT_TAG
#          docker rmi ballerina/ballerina:$GIT_TAG
#          docker image prune -f
#
#      - name: Build and push dev container
#        run: |
#          DOCKER_REPO=${{ steps.process-docker.outputs.dockerRepo }}
#          cp $VERSION/ballerina-$LONG_VERSION-linux-x64.deb $DOCKER_REPO/base/devcontainer/
#          docker build --no-cache=true --squash --build-arg BALLERINA_DIST=ballerina-$LONG_VERSION-linux-x64.deb -t ballerina/ballerina-devcontainer:$GIT_TAG $DOCKER_REPO/base/devcontainer
#          rm ${dockerRepo}/base/docker/ballerina-$LONG_VERSION-linux-x64.deb
#          docker push ballerina/ballerina-devcontainer:$GIT_TAG
#          docker rmi ballerina/ballerina-devcontainer:$GIT_TAG
#          docker image prune -f





