name: Full Build Pipeline (patch branch)

on:
  workflow_dispatch:
    inputs:
      ballerina_lang_branch:
        description: 'Ballerina-lang branch'
        required: true
        default: 'master'
      enable_tests:
        type: choice
        description: 'Enable Tests'
        deprecationMessage: 'true or false'
        required: true
        options:
          - 'true'
          - 'false'
        default: 'true'

jobs:
  build-lang:
    name: Build Ballerina Lang
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Download Module Data
        run: |
          wget https://raw.githubusercontent.com/ballerina-platform/ballerina-release/master/dependabot/resources/extensions.json

      - name: Create Strategy Matrix
        id: set-matrix
        run: |
          MODULE_DATA_FILE="extensions.json"

          modules_l1="["
          for moduleName1 in $(jq '.standard_library| .[] | select(.level==1)| .name' $MODULE_DATA_FILE); do modules_l1="${modules_l1}${moduleName1}, "; done
          modules_l1="${modules_l1/%??/}]"
          echo "::set-output name=modules_l1::${modules_l1}"

          modules_l2="["
          for moduleName2 in $(jq '.standard_library| .[] | select(.level==2)| .name' $MODULE_DATA_FILE); do modules_l2="${modules_l2}${moduleName2}, "; done
          modules_l2="${modules_l2/%??/}]"
          echo "::set-output name=modules_l2::${modules_l2}"

          modules_l3="["
          for moduleName3 in $(jq '.standard_library| .[] | select(.level==3)| .name' $MODULE_DATA_FILE); do modules_l3="${modules_l3}${moduleName3}, "; done
          modules_l3="${modules_l3/%??/}]"
          echo "::set-output name=modules_l3::${modules_l3}"

          modules_l3="["
          for moduleName3 in $(jq '.standard_library| .[] | select(.level==3)| .name' $MODULE_DATA_FILE); do modules_l3="${modules_l3}${moduleName3}, "; done
          modules_l3="${modules_l3/%??/}]"
          echo "::set-output name=modules_l3::${modules_l3}"

          modules_l4="["
          for moduleName4 in $(jq '.standard_library| .[] | select(.level==4)| .name' $MODULE_DATA_FILE); do modules_l4="${modules_l4}${moduleName4}, "; done
          modules_l4="${modules_l4/%??/}]"
          echo "::set-output name=modules_l4::${modules_l4}"

          modules_l5="["
          for moduleName5 in $(jq '.standard_library| .[] | select(.level==5)| .name' $MODULE_DATA_FILE); do modules_l5="${modules_l5}${moduleName5}, "; done
          modules_l5="${modules_l5/%??/}]"
          echo "::set-output name=modules_l5::${modules_l5}"

          modules_l6="["
          for moduleName6 in $(jq '.standard_library| .[] | select(.level==6)| .name' $MODULE_DATA_FILE); do modules_l6="${modules_l6}${moduleName6}, "; done
          modules_l6="${modules_l6/%??/}]"
          echo "::set-output name=modules_l6::${modules_l6}"

          modules_l7="["
          for moduleName7 in $(jq '.standard_library| .[] | select(.level==7)| .name' $MODULE_DATA_FILE); do modules_l7="${modules_l7}${moduleName7}, "; done
          modules_l7="${modules_l7/%??/}]"
          echo "::set-output name=modules_l7::${modules_l7}"

      - name: Clone Ballerina Lang Repository
        run: git clone https://github.com/${{ github.repository_owner }}/ballerina-lang.git

      - name: Checkout To Lang Branch
        run: |
          cd ballerina-lang
          git checkout ${{ github.event.inputs.ballerina_lang_branch }}

      - name: Get Lang Version
        id: lang-version
        run: |
          VERSION=$((grep -w "version" | cut -d= -f2) < ballerina-lang/gradle.properties)
          echo "::set-output name=version::$VERSION"

      - name: Build ballerina-lang
        run: |
          cd ballerina-lang
          ./gradlew clean build -x check publishToMavenLocal --stacktrace --scan

      - name: Archive Lang Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Ballerina Lang Artifacts
          path: ~/.m2/

    outputs:
      lang_version: ${{ steps.lang-version.outputs.version }}
      modules_l1: ${{ steps.set-matrix.outputs.modules_l1 }}
      modules_l2: ${{ steps.set-matrix.outputs.modules_l2 }}
      modules_l3: ${{ steps.set-matrix.outputs.modules_l3 }}
      modules_l4: ${{ steps.set-matrix.outputs.modules_l4 }}
      modules_l5: ${{ steps.set-matrix.outputs.modules_l5 }}
      modules_l6: ${{ steps.set-matrix.outputs.modules_l6 }}
      modules_l7: ${{ steps.set-matrix.outputs.modules_l7 }}

  build-module-l1:
    needs: build-lang
    name: Build Level 1 Module
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module: ${{fromJson(needs.build-lang.outputs.modules_l1)}}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Echo Module Name
        run: echo ${{ matrix.module }}

      - name: Download Ballerina Lang Artifacts
        uses: actions/download-artifact@v2
        with:
          name: Ballerina Lang Artifacts
          path: ~/.m2/

      - name: Clone Module
        run: git clone https://github.com/ballerina-platform/${{ matrix.module }}.git

      - name: Update Lang Version in Module
        run: |
          perl -pi -e "s/^\s*ballerinaLangVersion=.*/ballerinaLangVersion=${{ needs.build-lang.outputs.lang_version }}/" ${{ matrix.module }}/gradle.properties

      - name: Build Module
        run: |
          cd ${{ matrix.module }}
          testsEnabled=" -x test"
          if [ "${{ github.event.inputs.enable_tests }}" == "true" ]; then testsEnabled="" && echo "Tests are Enabled"; else echo "Tests are Disabled"; fi
          echo "./gradlew clean build${testsEnabled} --scan --stacktrace"
          ./gradlew clean build${testsEnabled} --stacktrace --scan
        env:
          packageUser: ${{ secrets.BALLERINA_BOT_USERNAME }}
          packagePAT: ${{ secrets.BALLERINA_BOT_TOKEN }}

  build-module-l2:
    needs: [build-lang, build-module-l1]
    name: Build Level 2 Module
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module: ${{fromJson(needs.build-lang.outputs.modules_l2)}}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Echo Module Name
        run: echo ${{ matrix.module }}

      - name: Download Ballerina Lang Artifacts
        uses: actions/download-artifact@v2
        with:
          name: Ballerina Lang Artifacts
          path: ~/.m2/

      - name: Clone Module
        run: git clone https://github.com/ballerina-platform/${{ matrix.module }}.git

      - name: Update Lang Version in Module
        run: |
          perl -pi -e "s/^\s*ballerinaLangVersion=.*/ballerinaLangVersion=${{ needs.build-lang.outputs.lang_version }}/" ${{ matrix.module }}/gradle.properties

      - name: Build Module
        run: |
          cd ${{ matrix.module }}
          testsEnabled=" -x test"
          if [ "${{ github.event.inputs.enable_tests }}" == "true" ]; then testsEnabled="" && echo "Tests are Enabled"; else echo "Tests are Disabled"; fi
          echo "./gradlew clean build${testsEnabled} --scan --stacktrace"
          ./gradlew clean build${testsEnabled} --stacktrace --scan
        env:
          packageUser: ${{ secrets.BALLERINA_BOT_USERNAME }}
          packagePAT: ${{ secrets.BALLERINA_BOT_TOKEN }}

  build-module-l3:
    needs: [build-lang, build-module-l1, build-module-l2]
    name: Build Level 3 Module
    runs-on: ubuntu-latest
    strategy:
      matrix:
       module: ${{fromJson(needs.build-lang.outputs.modules_l3)}}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Echo Module Name
        run: echo ${{ matrix.module }}

      - name: Download Ballerina Lang Artifacts
        uses: actions/download-artifact@v2
        with:
          name: Ballerina Lang Artifacts
          path: ~/.m2/

      - name: Clone Module
        run: git clone https://github.com/ballerina-platform/${{ matrix.module }}.git

      - name: Update Lang Version in Module
        run: |
          perl -pi -e "s/^\s*ballerinaLangVersion=.*/ballerinaLangVersion=${{ needs.build-lang.outputs.lang_version }}/" ${{ matrix.module }}/gradle.properties

      - name: Build Module
        run: |
          cd ${{ matrix.module }}
          testsEnabled=" -x test"
          if [ "${{ github.event.inputs.enable_tests }}" == "true" ]; then testsEnabled="" && echo "Tests are Enabled"; else echo "Tests are Disabled"; fi
          echo "./gradlew clean build${testsEnabled} --scan --stacktrace"
          ./gradlew clean build${testsEnabled} --stacktrace --scan
        env:
          packageUser: ${{ secrets.BALLERINA_BOT_USERNAME }}
          packagePAT: ${{ secrets.BALLERINA_BOT_TOKEN }}

  build-module-l4:
    needs: [build-lang, build-module-l1, build-module-l2, build-module-l3]
    name: Build Level 4 Module
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module: ${{fromJson(needs.build-lang.outputs.modules_l4)}}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Echo Module Name
        run: echo ${{ matrix.module }}

      - name: Download Ballerina Lang Artifacts
        uses: actions/download-artifact@v2
        with:
          name: Ballerina Lang Artifacts
          path: ~/.m2/

      - name: Clone Module
        run: git clone https://github.com/ballerina-platform/${{ matrix.module }}.git

      - name: Update Lang Version in Module
        run: |
          perl -pi -e "s/^\s*ballerinaLangVersion=.*/ballerinaLangVersion=${{ needs.build-lang.outputs.lang_version }}/" ${{ matrix.module }}/gradle.properties

      - name: Build Module
        run: |
          cd ${{ matrix.module }}
          testsEnabled=" -x test"
          if [ "${{ github.event.inputs.enable_tests }}" == "true" ]; then testsEnabled="" && echo "Tests are Enabled"; else echo "Tests are Disabled"; fi
          echo "./gradlew clean build${testsEnabled} --scan --stacktrace"
          ./gradlew clean build${testsEnabled} --stacktrace --scan
        env:
          packageUser: ${{ secrets.BALLERINA_BOT_USERNAME }}
          packagePAT: ${{ secrets.BALLERINA_BOT_TOKEN }}

  build-module-l5:
    needs: [build-lang, build-module-l1, build-module-l2, build-module-l3, build-module-l4]
    name: Build Level 5 Module
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module: ${{fromJson(needs.build-lang.outputs.modules_l5)}}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Echo Module Name
        run: echo ${{ matrix.module }}

      - name: Download Ballerina Lang Artifacts
        uses: actions/download-artifact@v2
        with:
          name: Ballerina Lang Artifacts
          path: ~/.m2/

      - name: Clone Module
        run: git clone https://github.com/ballerina-platform/${{ matrix.module }}.git

      - name: Update Lang Version in Module
        run: |
          perl -pi -e "s/^\s*ballerinaLangVersion=.*/ballerinaLangVersion=${{ needs.build-lang.outputs.lang_version }}/" ${{ matrix.module }}/gradle.properties

      - name: Build Module
        run: |
          cd ${{ matrix.module }}
          testsEnabled=" -x test"
          if [ "${{ github.event.inputs.enable_tests }}" == "true" ]; then testsEnabled="" && echo "Tests are Enabled"; else echo "Tests are Disabled"; fi
          echo "./gradlew clean build${testsEnabled} --scan --stacktrace"
          ./gradlew clean build${testsEnabled} --stacktrace --scan
        env:
          packageUser: ${{ secrets.BALLERINA_BOT_USERNAME }}
          packagePAT: ${{ secrets.BALLERINA_BOT_TOKEN }}
#          devCentralToken: ${{ secrets.BALLERINA_DEV_CENTRAL_ACCESS_TOKEN }}
